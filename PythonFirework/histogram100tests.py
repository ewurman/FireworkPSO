import numpy as np
import matplotlib.pyplot as plt

## https://stackoverflow.com/questions/6871201/plot-two-histograms-at-the-same-time-with-matplotlib

# function = ""


# rot = [54.7227,54.7227,72.6319,72.6319,72.6319,52.7327,52.7327,52.7327,58.7025,58.7025,58.7025,44.773,44.773,44.773,44.773,42.7832,42.7832,42.7832,56.7126,56.7126,56.7126,46.763,46.763,46.763,28.8538,28.8538,28.8538,28.8538,68.6521,68.6521,68.6521,54.7227,54.7227,54.7227,42.7832,42.7832,42.7832,74.6218,74.6218,69.647,69.647,53.7277,53.7277,53.7277,55.7176,55.7176,55.7176,26.8639,26.8639,26.8639,55.7175,55.7175,55.7175,48.7529,48.7529,48.7529,54.7227,54.7227,54.7227,61.6874,61.6874,61.6874,61.6874,51.7378,51.7378,51.7378,58.7025,58.7025,58.7025,69.647,69.647,69.647,71.6369,71.6369,71.6369,51.7377,51.7377,51.7377,56.7126,56.7126,56.7126,56.7126,42.7831,42.7831,42.7831,39.7983,39.7983,39.7983,47.758,47.758,47.758,53.7277,53.7277,53.7277,53.7277,56.7125,56.7125,56.7125,66.6621,66.6621]
# rec = [19.7439,19.7244,19.7804,19.7097,19.8228,19.6275,19.7715,19.7648,7.54952e-15,19.5033,19.8205,19.7552,19.8378,19.8765,20.0848,19.8754,19.8068,19.8034,19.4415,7.54952e-15,19.8752,19.8611,1.46549e-14,7.54952e-15,19.988,19.7127,1.46549e-14,19.8156,1.46549e-14,19.8613,19.9182,19.8085,19.8855,19.8029,7.54952e-15,19.9586,19.7248,19.7999,1.46549e-14,19.5373,19.7998,1.46549e-14,1.46549e-14,19.8635,19.8094,19.74,19.9197,19.8572,18.9713,19.839,19.5215,19.8106,19.7473,19.8327,19.692,19.6634,20.0946,19.7337,19.8259,19.4762,19.7751,19.817,12.8755,20.0794,19.8537,19.947,19.8364,19.9687,1.46549e-14,19.8513,19.4185,19.9373,19.8318,19.8706,19.819,7.54952e-15,19.7915,19.5899,19.8456,19.7064,7.54952e-15,7.54952e-15,19.7183,19.7519,19.8091,19.7079,19.7711,19.822,7.54952e-15,1.46549e-14,7.54952e-15,7.54952e-15,19.7172,1.46549e-14,19.7418,1.46549e-14,19.7248,19.3494,19.8789,19.6936]
# pso = []

# bins = np.linspace(0, 100, 100)

# plt.hist(rot, bins, alpha=0.5, label='Rot FA')
# plt.hist(rec, bins, alpha=0.5, label='Rec FA')
# plt.hist(pso, bins, alpha=0.5, label='PSO')
# plt.legend("Distribution of Final Performance for 100 Tests of {} Function".format(function))
# plt.xlabel("Performance after approx. 25,000 evaluations")
# plt.ylabel("Tests Finishing at Eval")
# plt.legend(loc='upper right')
# plt.show()


function = "Rosenbrock"
#xfpso, ypso

x = [267.73383408050483,557.683205890752,353.2730979462631,421.1906664526192,441.95824379675554,507.94858073434216,503.91711139770615,313.68208273909624,405.50132626842054,439.3824144041196,437.1662494323447,513.834783426768,494.20368327935864,360.61984928597303,752.3428631227504,462.68645576679614,361.0547592234939,244.9492086326636,419.00074027976876,387.002314556719,341.03844397701226,377.5578105175954,360.67434016502204,478.5783881861622,333.3299085557203]

y = [0.220493,0.220493,0.220493,14.5775,14.5775,14.5775,14.5775,28.3145,28.3145,28.3145,0.0411798,0.0411798,0.0411798,0.0411798,116.666,116.666,116.666,88.7755,88.7755,88.7755,88.7755,14.0969,14.0969,14.8311,14.8311,14.8311,14.8311,4.71645,4.71645,4.71645,9.06971,9.06971,9.06971,13.3833,13.3833,13.3833,13.3833,0.455514,0.455514,0.455514,4.48079,4.48079,4.48079,9.22008,9.22008,9.22008,9.22008,12.5185,12.5185,12.5185,5.31058,5.31058,5.31058,5.31058,14.5832,14.5832,14.5832,14.6178,14.6178,14.6178,14.6178,100.561,100.561,100.561,13.3552,13.3552,13.3552,0.070265,0.070265,113.409,113.409,113.409,15.7525,15.7525,15.7525,111.241,111.241,111.241,89.3011,89.3011,89.3011,89.3011,15.9969,15.9969,15.9969,21.8665,21.8665,21.8665,21.8665,0.011751,0.011751,0.011751,0.0472616,0.0472616,0.0472616,0.0472616,10.2063,10.2063,10.2063,0.73231
]
y = y[:25]




a = min(x)
b = min(y)

print(min(a,b))

a = max(x)
b = max(y)

print(max(a,b))

thiss= input("fd")

bins = np.linspace(0, 800, 100)


# plt.hist(a8x100, bins, alpha=0.5, label='8 rockets and 100 iterations')
# plt.hist(a12x65, bins, alpha=0.5, label='12 rockets and 65 iterations')
# plt.hist(a16x50, bins, alpha=0.5, label='16 rockets and 50 iterations')
plt.hist([x,y], bins, label=['Rot: 16 rockets and 50 iterations','PSO: Global Neighborhood'])
plt.title("Best Distribution of F-PSO vs PSO on {} function".format(function))
plt.xlabel("Performance after approx. 25,000 evaluations")
plt.ylabel("Tests Finishing at Eval")
plt.legend(loc='upper right')
plt.show()
