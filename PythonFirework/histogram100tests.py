import numpy as np
import matplotlib.pyplot as plt

## https://stackoverflow.com/questions/6871201/plot-two-histograms-at-the-same-time-with-matplotlib

# function = ""


# rot = [54.7227,54.7227,72.6319,72.6319,72.6319,52.7327,52.7327,52.7327,58.7025,58.7025,58.7025,44.773,44.773,44.773,44.773,42.7832,42.7832,42.7832,56.7126,56.7126,56.7126,46.763,46.763,46.763,28.8538,28.8538,28.8538,28.8538,68.6521,68.6521,68.6521,54.7227,54.7227,54.7227,42.7832,42.7832,42.7832,74.6218,74.6218,69.647,69.647,53.7277,53.7277,53.7277,55.7176,55.7176,55.7176,26.8639,26.8639,26.8639,55.7175,55.7175,55.7175,48.7529,48.7529,48.7529,54.7227,54.7227,54.7227,61.6874,61.6874,61.6874,61.6874,51.7378,51.7378,51.7378,58.7025,58.7025,58.7025,69.647,69.647,69.647,71.6369,71.6369,71.6369,51.7377,51.7377,51.7377,56.7126,56.7126,56.7126,56.7126,42.7831,42.7831,42.7831,39.7983,39.7983,39.7983,47.758,47.758,47.758,53.7277,53.7277,53.7277,53.7277,56.7125,56.7125,56.7125,66.6621,66.6621]
# rec = [19.7439,19.7244,19.7804,19.7097,19.8228,19.6275,19.7715,19.7648,7.54952e-15,19.5033,19.8205,19.7552,19.8378,19.8765,20.0848,19.8754,19.8068,19.8034,19.4415,7.54952e-15,19.8752,19.8611,1.46549e-14,7.54952e-15,19.988,19.7127,1.46549e-14,19.8156,1.46549e-14,19.8613,19.9182,19.8085,19.8855,19.8029,7.54952e-15,19.9586,19.7248,19.7999,1.46549e-14,19.5373,19.7998,1.46549e-14,1.46549e-14,19.8635,19.8094,19.74,19.9197,19.8572,18.9713,19.839,19.5215,19.8106,19.7473,19.8327,19.692,19.6634,20.0946,19.7337,19.8259,19.4762,19.7751,19.817,12.8755,20.0794,19.8537,19.947,19.8364,19.9687,1.46549e-14,19.8513,19.4185,19.9373,19.8318,19.8706,19.819,7.54952e-15,19.7915,19.5899,19.8456,19.7064,7.54952e-15,7.54952e-15,19.7183,19.7519,19.8091,19.7079,19.7711,19.822,7.54952e-15,1.46549e-14,7.54952e-15,7.54952e-15,19.7172,1.46549e-14,19.7418,1.46549e-14,19.7248,19.3494,19.8789,19.6936]
# pso = []

# bins = np.linspace(0, 100, 100)

# plt.hist(rot, bins, alpha=0.5, label='Rot FA')
# plt.hist(rec, bins, alpha=0.5, label='Rec FA')
# plt.hist(pso, bins, alpha=0.5, label='PSO')
# plt.legend("Distribution of Final Performance for 100 Tests of {} Function".format(function))
# plt.xlabel("Performance after approx. 25,000 evaluations")
# plt.ylabel("Tests Finishing at Eval")
# plt.legend(loc='upper right')
# plt.show()
a8x100 = []
a12x65 = []
a16x50 = []

function = "Rastrigin"
alg = "Recursive"

a8x100 = [229.077136084,209.131347997,203.382680584,234.882900867,189.624200611,238.506778345,202.35110193,232.362275725,178.261570186,169.482665737,196.502233869,206.8868111,206.060857003,244.599677124,192.274118013,211.300666178,203.46694058,228.615460064,197.10334018,234.219521939,228.183392973,181.686270119,150.103191202,220.58333903,220.732580699]
a12x65 = [199.284903215,182.151037194,209.169151644,206.782146475,214.086951719,206.869699426,218.263917302,217.043924018,237.900665276,233.217079144,198.002589775,218.246768881,221.973717235,208.807388691,213.697914764,207.629015739,202.153895809,173.269046194,200.180370003,211.108786897,210.67263756,238.029480117,170.796178442,201.125223138,201.716614174]
a16x50 = [211.246123664,223.413423414,222.630587489,194.382934215,219.818478236,217.360512791,189.000063604,231.807440944,213.446124204,166.64147033,207.391412605,202.127510932,206.456508999,187.45656287,233.224488963,194.669067067,202.899751221,213.627900685,239.08257313,215.936734784,237.77078945,225.737232795,211.205880169,185.149771589,173.322371201]


a = min(a8x100)
b = min(a12x65)
c = min(a16x50)

print(min(a,b,c))

a = max(a8x100)
b = max(a12x65)
c = max(a16x50)

print(max(a,b,c))

thiss= input("fd")

bins = np.linspace(130, 250, 60)


# plt.hist(a8x100, bins, alpha=0.5, label='8 rockets and 100 iterations')
# plt.hist(a12x65, bins, alpha=0.5, label='12 rockets and 65 iterations')
# plt.hist(a16x50, bins, alpha=0.5, label='16 rockets and 50 iterations')
plt.hist([a8x100,a12x65,a16x50], bins, label=['8 rockets and 100 iterations','12 rockets and 65 iterations','16 rockets and 50 iterations'])
plt.title("Distribution of {} F-PSO Performance for 25 Tests of {} Function ".format(alg, function))
plt.xlabel("Performance after approx. 25,000 evaluations")
plt.ylabel("Tests Finishing at Eval")
plt.legend(loc='upper left')
plt.show()